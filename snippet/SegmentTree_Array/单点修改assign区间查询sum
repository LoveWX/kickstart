struct SegTree
{
    //单点修改assign，区间查询sum
    int n;
    vector<int> trSum;
    void Build(int size)
    {
        n=size;
        trSum.assign(n*2,0);
    }
    void Build(vector<int> &vi)
    {
        n=vi.size();
        trSum.assign(n*2,0);
        for(int i=0;i<n;++i)
        {
            trSum[i+n]=vi[i];
        }
        for(int i=n-1;i>0;--i)
        {
            trSum[i]=trSum[i<<1]+trSum[i<<1|1];
        }
    }
    int Query(int l,int r)
    {
        int ans=0;
        for(l+=n,r+=n;l<r;l>>=1,r>>=1)
        {
            if(l&1) ans+=trSum[l++];
            if(r&1) ans+=trSum[--r];
        }
        return ans;
    }
    void Modify(int p,int val)
    {
        for(trSum[p+=n]=val;p>1;p>>=1)
        {
            trSum[p>>1]=trSum[p]+trSum[p^1];
        }
    }
};

