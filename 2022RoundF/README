Problem A. Sort the Fabrics
织物有三个属性：颜色、长度、编号。
有两种排列方法：按颜色、编号升序排列；按长度、编号升序排列。
给定一些织物，求两种排列方式下，都处在同样位置的织物的数量。
按要求开两个数组排序比较即可。

Problem B. Water Container System
一些水箱构成一个倒立的树，在树中处于同一层的水箱位于同一水平面上。水箱容量相同都为1L。
此时向一些水箱中注水，求水面稳定后水满的水箱个数。
树的层序遍历，统一考虑同一层的所有水箱，再考虑下一层即可。
其它方法如DFS等标注出每层的水箱数亦可。

Problem C. Story of Seasons
种下的一颗种子可以在一些天之后收获得到一定数量的金钱。但是全周期只能在D天中。
在无限大的农场中，给定N种种子的个数、成熟天数和金钱，每天最多可以种X颗种子，求可以获得的最大金钱。
注意到农场是无限大的，也就是种子之间不会互相干扰，那么种子只要能够在D天中成熟就可以种。
从最后一天向前推，解锁所有在该天种下能够在D天结束时成熟的种子，选择其中最大金钱的种子来种植。
这样每个"种植位"都将填充上可能的最大价值的种子，即可求得结果。
但是注意到D<=10^12，因此需要按照每类种子的成熟时间，将D天划分为时间段
这样就可以在每个时间段将已解锁的种子一起处理。因此需要O(N)时间。
另外需要用堆来获得每个时间段中价值最大的一些种子，需要O(logN)时间。总和时间复杂度为O(NlogN)

Problem D. Scheduling a Meeting
给定N个人在[0,D]的时间范围内的会议安排。现有M个会议。
现在需要安排长度为X的会议，需要N个人中的K个人全程参加。
如果K个人中此时间段有重叠的会议则需要取消掉。求最少需要取消的会议的数量。
使用差分数组记录现有的会议信息，这样就可以通过前一个时间段的会议状态计算这一个时间段的会议状态
对于每个时间段的会议状态，需要记录N个人现有的会议数，以及其中会议数最少的K个人的会议数总和
因此可以维护一张表用于存储K个最少现有会议的人的会议个数，
并维护一个变量记录此时表中元素和，即此时间段会议最少的K人的会议数总和
剩下的N-K人用另一张表维护。
通过差分数组更新时间段状态时，通过某人会议数前后时间段数据来更新这两张表
即可获得当前时间段的会议数据。
遍历新会议所有可能的时间段即可。
新会议可能的时间段有D-X+1种。
通过差分数组现有的会议只可能在起始时刻和终止时刻被计算，因此规模只有O(M)
额外需要O(logM)的时间来维护两张表。
因此总和时间复杂度为O(max(D-X,M)logM)
