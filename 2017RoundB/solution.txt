Problem A. 
给定递增数组，求所有集合的最大值减最小值的和。
对于下标为i的元素num[i]，其前面的i个元素组成(2^i-1)个非空集合。
每一个集合添加num[i]后，就变为最大值为num[i]的非空集合。最大值的和为num[i]*(2^i-1)
这些集合以最小值为num[0],num[1],...,num[i-1]分类，其中
最小值为num[0]的集合共2^(i-1)个
最小值为num[1]的集合共2^(i-2)个
...
最小值为num[i-1]的集合共1个
所以最小值的和为
num[0]*(2^(i-1))+num[1]*(2^(i-2))+...+num[i-1]*(2^0)
而对于num[i+1]，其最小值的和为
num[0]*(2^(i))+num[1]*(2^(i-1))+...+num[i-1]*(2^1)+num[i]*(2^0)
可见最小值的和可以递推计算。所以依次处理每个元素即可。

Problem B. 

Problem C. 
