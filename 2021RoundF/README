Problem A. Trash Bins
N个房子分布在坐标1,2,3,...,N上。有一些垃圾桶在某些房子前面。
房子里的人要倒垃圾的话会走到最近的垃圾桶。求所有人到垃圾桶的最短距离的和。
对每个房子求其左右两侧的垃圾桶的距离的较小值即可，注意最左侧和最右侧的房子可能只有一侧有垃圾桶
时间复杂度O(N)

Problem B. Festival
节日从第1天持续到第D天，其中有N个活动分别从第si天持续到第ei天，每个活动都有一个欢乐值hi
现在只能选择一天且最多参加该天的K个活动，求可能的最大欢乐值。
通过活动的起始天si和终止天ei，可以从第1天到第D天依次遍历，找到每天存在的活动。
对于每天存在的活动，需要找到其中K个欢乐值最大的活动。
那么可以维护一个multiset来存放欢乐值最大的K个活动，顺便存一下总欢乐值，而该天存在的其它活动用另一个multiset存起来
这样需要O(1)的时间找到该天的最大欢乐值。
每天的信息(两个multiset)可以从前一天的信息更新得到：
先通过时间轴去掉结束的活动/加入开始的活动，再通过在两个multiset之间移动元素使其中一个multiset保持为K个活动
注意加入新的元素时要按现有的两个multiset分界线区分，以免两个multiset值域有重叠。
将每个活动处理到时间轴上需要O(N)，每天添加/删除活动总计需要O(NlogK)，两个multiset互相更新需要O(KlogK)
因此时间复杂度为O(N+NlogK+KlogK)

Problem C. Star Trappers
二维平面上有一些白点和一个蓝点，求将蓝点包含的周长最小的多边形的周长。蓝点不能在该多边形的边上。
可能会出现找不到这种多边形的情况。
可以先将坐标原点移动到蓝点，然后用叉积来判断蓝点在向量的哪一边。
所求多边形一定是凸的，否则可以连接导致其变“凹”的点使多边形变成凸的，周长会更小。
因此需要枚举每个点，假设其在所求多边形上时，周长是多少。
可以从该点出发，按逆时针顺序依次经过一些点再回到该点，求得所有可能的多边形的周长最小值。
可以证明周长最小的多边形一定是三角形或者四边形。
证明：不妨设起点在y轴负向上，这样所有的白点被分成4个集合：
1.x>0部分的点，这些点可以由起点通过一条边直接连接
2.y轴正向的点，这些点可以由x>0部分的点通过一条边直接连接
3.x<0部分的点，这些点可以由y轴正向的点通过一条边直接连接
4.y轴负向的其它点，因周长会更长而无法连接
如果所求多边形在x>0部分的点有多于1个点，设为A、B，则|SB|<|SAB|，即可以用SB代替SAB得到更小周长的多边形，
因此所求多边形在x>0部分的点有且只有一个
同理可得x<0部分的点有且只有一个
而y轴正向的点可能有一个，也可能没有
因此得证：所求多边形要么是三角形，要么是四边形，且至少一条对角线穿过蓝点
对于每个点，首先通过叉积计算出它属于哪一类的点，然后从该点开始依次计算到达每个点的最小边长和
注意需要通过判断蓝点是不是在向量的左边来判断下一个点的可达性
所有点的最小边长和即为所求。
最坏情况下，每类点的数量相同，因此时间复杂度为：O(N*(N/2)^2+N*(N/3)^2)~O(N^3)

Problem D. Graph Travel
给定无向图，每个结点由(Li,Ri,Ai)表示当总能量处于[Li,Ri]时可以打破该结点护盾进入该结点，并获得Ai点能量
当然需要由无向图上的其它已到达结点和该结点有连接的边
路径的顺序表示为结点护盾被打破的顺序，即首次访问的顺序
求若要取得恰好K点能量，可行的路径数是多少
由N<=15可知需要状态压缩DP。每个mask表示已经打碎的护盾集合，这样可以预先求得这种状态获得的总能量
对于每个状态，枚举其中某个已打碎的护盾，作为最后一个打碎的护盾
就可以求得前一个状态，并检查是否满足转移条件：能量处于[Li,Ri]且有通路
枚举的每一种状态都可以得到不同的合法路径，累加起来作为该状态的结果
对于每个状态，可以求得其获得的总能量，将总能量为K的状态作为最终状态进行DP并累加结果即可
时间复杂度：O(N*2^N)
